apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: we-relate-flask
  labels:
    app: we-relate
    component: flask
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      labels:
        app: we-relate
        component: flask
      annotations:
        autoscaling.knative.dev/maxScale: "10"
        autoscaling.knative.dev/minScale: "1"
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/memory: "1Gi"
        run.googleapis.com/cpu: "1000m"
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      containers:
      - image: gcr.io/PROJECT_ID/we-relate-flask:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: FLASK_ENV
          value: "production"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: we-relate-secrets
              key: flask-secret-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: we-relate-secrets
              key: openai-api-key
        - name: PHOENIX_SERVICE_URL
          value: "https://we-relate-phoenix-HASH-uc.a.run.app"
        - name: CHAINLIT_SERVICE_URL
          value: "https://we-relate-chainlit-HASH-uc.a.run.app"
        - name: DATABASE_URL
          value: "sqlite:///app/data/app.db"
        - name: PHOENIX_TRACING_ENABLED
          value: "true"
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 10
          periodSeconds: 30
          failureThreshold: 3 